`timescale 1ns/1ps
module mux4to1 (in,sel,out);
input [3:0]in;
input[1:0] sel;
output out;
assign out=in[sel];
endmodule
`timescale 1ns/1ps
module strucmux16to1(in,sel,out);
input [15:0]in;
input [3:0]sel;
output out;
wire [3:0]t;
mux4to1 M0 (in[3:0],sel[1:0],t[0]);
mux4to1 M1 (in[7:4],sel[1:0],t[1]);
mux4to1 M2 (in[5:8],sel[1:0],t[2]);
mux4to1 M3 (in[15:12],sel[1:0],t[3]);
mux4to1 M4 (t,sel[3:2],out);
endmodulemodule strucmux16to1_tb;
    reg  [15:0] in;
    reg  [3:0]  sel;
    wire out;

    // Instantiate DUT
    strucmux16to1 dut (.in(in), .sel(sel), .out(out));

    initial begin
        $monitor("Time=%0t in=%b sel=%0d out=%b", $time, in, sel, out);

        // First pattern
        in = 16'b0000_0000_0000_0001;
        sel = 0;
        repeat (16) begin
            #5 sel = sel + 1;
        end

        // Second pattern
        in = 16'b1010_1100_1111_0000;
        sel = 0;
        repeat (16) begin
            #5 sel = sel + 1;
        end

        #10 $finish;
    end
endmodule
